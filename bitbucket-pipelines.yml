# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.8.2

test-master: &test-master
  step:
    name: Test
    script:
      - python -m pip install --upgrade pip
      - pip install pylint
      - pip install pylint-fail-under
      - pip install pytest
      - pip install pytest-cov
      - pip install -r requirements.txt
      - pytest ./iqmotion/tests/ --ignore ./iqmotion/tests/test_custom_iq_module.py --cov-config=.coveragerc --cov=iqmotion --cov-fail-under=90
    services:
      - docker

test: &test
  step:
    name: Test
    script:
      - python -m pip install --upgrade pip
      - pip install pytest
      - pip install pytest-cov
      - pip install -r requirements.txt
      - pytest ./iqmotion/tests/ --ignore ./iqmotion/tests/test_custom_iq_module.py --cov-config=.coveragerc --cov=iqmotion 
    services:
      - docker

test-release: &test-release
  step:
    name: Test
    script:
      - python -m pip install --upgrade pip
      - pip install pytest
      - pip install pytest-cov
      - pip install pylint-fail-under
      - pip install -r requirements.txt
      - pytest ./iqmotion/tests/ --ignore ./iqmotion/tests/test_custom_iq_module.py --cov-config=.coveragerc --cov=iqmotion --cov-fail-under=90
    services:
      - docker

release-new-version: &release-new-version
  step:
    name: Bump the repository version and releases new package on pypi
    script:
      - python -m pip install --upgrade pip
      - pip install pybadges
      - pip install semversioner==0.8.1
      - pip install twine
      - chmod +x ./ci_scripts/bump_version.sh
      - chmod +x ./ci_scripts/build_and_release_package.sh
      - chmod +x ./ci_scripts/git_tag_and_push.sh
      - ./ci_scripts/bump_version.sh
      - ./ci_scripts/build_and_release_package.sh
      - ./ci_scripts/git_tag_and_push.sh


delete-release-branch: &delete-release-branch
  step:
    name: Deletes the release branch
    script:
      - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
      - git fetch 
      - git checkout master
      - git push -d origin $BITBUCKET_BRANCH


pipelines:
  default:
    - <<: *test
  branches:
    master:
    - <<: *test-master
    release/*:
    - <<: *test-release
    - <<: *release-new-version
    - <<: *delete-release-branch