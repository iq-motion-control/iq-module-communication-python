# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.8.2

test-master: &test-master
  step:
    name: Test
    script:
      - python -m pip install --upgrade pip
      - pip install pylint
      - pip install pylint-fail-under
      - pip install pytest
      - pip install pytest-cov
      - pip install coverage-badge
      - pip install -r requirements.txt
      - pytest ./iqmotion/tests/ --cov-config=.coveragerc --cov=iqmotion --cov-fail-under=90
      - pylint-fail-under --fail-under 10 iqmotion
      - coverage-badge -o coverage.svg
    artifacts:
      - coverage.svg
    services:
      - docker

test: &test
  step:
    name: Test
    script:
      - python -m pip install --upgrade pip
      - pip install pytest
      - pip install pytest-cov
      - pip install coverage-badge
      - pip install -r requirements.txt
      - pytest ./iqmotion/tests/ --cov-config=.coveragerc --cov=iqmotion 
    services:
      - docker

test-release: &test-release
  step:
    name: Test
    script:
      - python -m pip install --upgrade pip
      - pip install pytest
      - pip install pytest-cov
      - pip install pylint-fail-under
      - pip install coverage-badge
      - pip install -r requirements.txt
      - pytest ./iqmotion/tests/ --cov-config=.coveragerc --cov=iqmotion --cov-fail-under=90
      - pylint-fail-under --fail-under 10 iqmotion
      - coverage-badge -o coverage.svg
    artifacts:
      - coverage.svg
    services:
      - docker

release-new-version: &release-new-version
  step:
    name: Bump the repository version
    script:
      - python -m pip install --upgrade pip
      - pip install pybadges
      - pip install semversioner
      - pip install twine
      - chmod +x ./ci_scripts/bump_version.sh
      - chmod +x ./ci_scripts/build_and_release_package.sh
      - chmod +x ./ci_scripts/git_tag_and_push.sh
      - ./ci_scripts/bump_version.sh
      - ./ci_scripts/build_and_release_package.sh
      - ./ci_scripts/git_tag_and_push.sh
    artifacts:
      - release_badge.svg


delete-release-branch: &delete-release-branch
  step:
    name: Deletes the release branch
    script:
      - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
      - git fetch 
      - git checkout master
      - git push -d origin $BITBUCKET_BRANCH

upload-cov-badge: &upload-cov-badge
  step:
    name: Upload the coverage badge
    script:
      - pipe: docker://bitbucketpipelines/bitbucket-upload-file:0.1.0
        variables:
          BITBUCKET_USERNAME: $BITBUCKET_USERNAME
          BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
          FILENAME: 'coverage.svg'

upload-release-badge: &upload-release-badge
  step:
    name: Upload the coverage badge
    script:
      - pipe: docker://bitbucketpipelines/bitbucket-upload-file:0.1.0
        variables:
          BITBUCKET_USERNAME: $BITBUCKET_USERNAME
          BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
          FILENAME: 'release_badge.svg'

pipelines:
  default:
    - <<: *test
  branches:
    master:
    - <<: *test-master
    release/*:
    - <<: *test-release
    - <<: *upload-cov-badge
    - <<: *release-new-version
    - <<: *upload-release-badge
    - <<: *delete-release-branch